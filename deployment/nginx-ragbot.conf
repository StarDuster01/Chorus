# Nginx configuration for RagBot
# Place this file in /etc/nginx/sites-available/ragbot
# Then create symlink: sudo ln -s /etc/nginx/sites-available/ragbot /etc/nginx/sites-enabled/

upstream ragbot_backend {
    server 127.0.0.1:50505;
}

# Rate limiting
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=upload:10m rate=1r/s;

server {
    listen 80;
    server_name 20.127.202.39;  # Your VM's public IP
    
    # Redirect HTTP to HTTPS (uncomment after SSL setup)
    # return 301 https://$server_name$request_uri;
    
    # For now, serve HTTP directly
    client_max_body_size 20G;  # Allow large file uploads
    client_body_timeout 300s;
    client_header_timeout 300s;
    proxy_connect_timeout 300s;
    proxy_send_timeout 300s;
    proxy_read_timeout 300s;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml
        text/plain
        text/css
        text/xml
        text/javascript
        application/x-javascript
        application/xml;

    # Static files (React frontend)
    location / {
        root /home/azureuser/apps/ragbot/ragbot-backend/frontend;
        try_files $uri $uri/ /index.html;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # API endpoints
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        proxy_pass http://ragbot_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support (if needed)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
    
    # File upload endpoints with special handling
    location ~ ^/api/datasets/.*/documents$ {
        limit_req zone=upload burst=5 nodelay;
        proxy_pass http://ragbot_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Extended timeouts for large uploads
        proxy_connect_timeout 600s;
        proxy_send_timeout 600s;
        proxy_read_timeout 600s;
    }
    
    # Health check endpoint
    location /health {
        proxy_pass http://ragbot_backend;
        access_log off;
    }
    
    # Image serving with caching
    location /api/images/ {
        proxy_pass http://ragbot_backend;
        expires 30d;
        add_header Cache-Control "public";
    }
    
    # Logs location
    access_log /var/log/nginx/ragbot_access.log;
    error_log /var/log/nginx/ragbot_error.log;
}

# HTTPS configuration (uncomment after obtaining SSL certificates)
# server {
#     listen 443 ssl http2;
#     server_name 20.127.202.39;
#     
#     ssl_certificate /path/to/ssl/certificate.crt;
#     ssl_certificate_key /path/to/ssl/private.key;
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
#     
#     # Same configuration as HTTP server above
#     # ... (copy all location blocks from above)
# } 