apiVersion: apps/v1
kind: Deployment
metadata:
  name: ragbot
  namespace: ragbot
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: ragbot
  template:
    metadata:
      labels:
        app: ragbot
    spec:
      # Target GPU node pool
      nodeSelector:
        kubernetes.azure.com/accelerator: nvidia
      tolerations:
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule
      - key: sku
        operator: Equal
        value: gpu
        effect: NoSchedule
      imagePullSecrets:
      - name: acr-auth
      containers:
      - name: ragbot
        image: chorusproduction.azurecr.io/ragbot:gpu
        imagePullPolicy: Always
        ports:
        - containerPort: 50505
        env:
        - name: FLASK_ENV
          value: "production"
        - name: FLASK_APP
          value: "app.py"
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: ragbot-secrets
              key: secret-key
        # Enable GPU optimizations for Tesla T4
        - name: CUDA_VISIBLE_DEVICES
          value: "0"
        - name: NVIDIA_VISIBLE_DEVICES
          value: "all"
        - name: NVIDIA_DRIVER_CAPABILITIES
          value: "compute,utility"
        # Use faster GPU-optimized settings
        - name: MODEL_CACHE_DIR
          value: "/code/model_cache"
        - name: PYTORCH_CUDA_ALLOC_CONF
          value: "max_split_size_mb:512,garbage_collection_threshold:0.6"
        # Tesla T4 specific optimizations
        - name: CUDA_LAUNCH_BLOCKING
          value: "0"
        - name: TORCH_CUDA_ARCH_LIST
          value: "7.5"  # Tesla T4 compute capability
        resources:
          requests:
            memory: "12Gi"
            cpu: "2000m"
            nvidia.com/gpu: 1
          limits:
            memory: "20Gi"  # Tesla T4 has 16GB VRAM + system memory
            cpu: "3000m"    # NC4as_T4_v3 has 4 vCPUs
            nvidia.com/gpu: 1
        volumeMounts:
        - name: chroma-db
          mountPath: /code/chroma_db
        - name: uploads
          mountPath: /code/uploads
        - name: conversations
          mountPath: /code/conversations
        - name: datasets
          mountPath: /code/datasets
        - name: image-indices
          mountPath: /code/image_indices
        - name: bots
          mountPath: /code/bots
        - name: chorus
          mountPath: /code/chorus
        - name: model-cache
          mountPath: /code/model_cache
        livenessProbe:
          httpGet:
            path: /health
            port: 50505
          initialDelaySeconds: 300   # 5 minutes for initial GPU model loading
          periodSeconds: 60          # Check every minute instead of 30s
          timeoutSeconds: 120        # 2 minutes timeout (was 10s!)
          failureThreshold: 10       # Allow 10 failures (10+ minutes of issues)
        readinessProbe:
          httpGet:
            path: /health
            port: 50505
          initialDelaySeconds: 180   # 3 minutes for GPU model loading
          periodSeconds: 30          # Check every 30s  
          timeoutSeconds: 60         # 1 minute timeout (was 10s!)
          failureThreshold: 8        # Allow 8 failures (4+ minutes of issues)
      volumes:
      - name: chroma-db
        persistentVolumeClaim:
          claimName: ragbot-chroma-db
      - name: uploads
        persistentVolumeClaim:
          claimName: ragbot-uploads
      - name: conversations
        persistentVolumeClaim:
          claimName: ragbot-conversations
      - name: datasets
        persistentVolumeClaim:
          claimName: ragbot-datasets
      - name: image-indices
        persistentVolumeClaim:
          claimName: ragbot-image-indices
      - name: bots
        persistentVolumeClaim:
          claimName: ragbot-bots
      - name: chorus
        persistentVolumeClaim:
          claimName: ragbot-chorus
      - name: model-cache
        persistentVolumeClaim:
          claimName: ragbot-model-cache
---
apiVersion: v1
kind: Service
metadata:
  name: ragbot
  namespace: ragbot
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 50505
    protocol: TCP
  selector:
    app: ragbot 